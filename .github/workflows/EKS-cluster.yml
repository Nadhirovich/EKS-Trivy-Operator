name: Start EKS Cluster and Scan with Trivy and List the vul report results

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'

jobs:
  aws-setup:
    uses: Nadhirovich/EKS-Trivy-Operator/.github/workflows/aws-setup.yml@master

  create-eks-cluster:
    needs: aws-setup
    runs-on: ubuntu-latest
    steps:
      # Install eksctl
      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      # Create the EKS cluster
      - name: Create EKS Cluster
        run: |
          eksctl create cluster \
            --name my-eks-cluster \
            --region eu-central-1 \
            --nodegroup-name standard-workers \
            --node-type t3.medium \
            --nodes 2 \
            --nodes-min 1 \
            --nodes-max 3 \
            --managed

  configure-aws-auth:
    needs: [aws-setup, create-eks-cluster] # Depends on both aws-setup and create-eks-cluster
    runs-on: ubuntu-latest
    steps:
      # Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # Update aws-auth ConfigMap
      - name: Update aws-auth ConfigMap
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: aws-auth
            namespace: kube-system
          data:
            mapRoles: |
            mapUsers: |
              - userarn: arn:aws:iam::543476919432:root
                username: root
                groups:
                  - system:masters
          EOF

      # Deploy Vulnerable Application
      - name: Deploy Vulnerable Application
        run: |
          kubectl apply -f https://raw.githubusercontent.com/aquasecurity/trivy-operator/main/examples/nginx-deployment.yaml

  deploy-trivy-operator:
    needs: [aws-setup, configure-aws-auth] # Ensures this job runs after aws-setup and configure-aws-auth
    runs-on: ubuntu-latest
    steps:
      # Install Helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      # Install Trivy Operator
      - name: Deploy Trivy Operator
        run: |
          helm repo add aqua https://aquasecurity.github.io/helm-charts/
          helm repo update
          helm install trivy-operator aqua/trivy-operator --namespace trivy-system --create-namespace

  fetch-scan-reports:
    needs: [aws-setup, deploy-trivy-operator] # Ensures this job runs after aws-setup and deploy-trivy-operator
    runs-on: ubuntu-latest
    steps:
      # Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # Fetch Vulnerability Reports
      - name: Fetch Vulnerability Reports
        run: |
          kubectl get vulnerabilityreports -A

      # List Vulnerability Reports (Detailed)
      - name: List Vulnerability Reports (Detailed)
        run: |
          echo "Listing Vulnerability Reports with Detailed Output:"
          kubectl get vulnerabilityreports -A -o yaml

      # Save Reports as Artifacts
      - name: Save Reports
        run: |
          kubectl get vulnerabilityreports -A -o json > vulnerability-reports.json
      - name: Upload Vulnerability Report
        uses: actions/upload-artifact@v3
        with:
          name: vulnerability-reports
          path: vulnerability-reports.json

  destroy-cluster:
    needs: [aws-setup, fetch-scan-reports] # Ensures this job runs after aws-setup and fetch-scan-reports
    runs-on: ubuntu-latest
    steps:
      # Wait for a Specified Time
      - name: Wait for 10 minutes
        run: sleep 600

      # Delete EKS Cluster
      - name: Delete EKS Cluster
        run: |
          eksctl delete cluster --name my-eks-cluster --region eu-central-1
